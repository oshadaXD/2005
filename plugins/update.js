function _0x45f6() {
    const _0x556c70 = [
        '\x20:\x20',
        '𝗼𝗺𝗺𝗮𝗻𝗱\x0a\x20\x20\x20',
        'host',
        '𝗿𝗿𝗼𝗿\x20𝗢𝗰𝗰𝘂𝗿',
        'help',
        'ld\x20-\x20<\x20Doc',
        '𝗜𝘀𝘀𝘂𝗲𝘀\x20',
        '11098165@g',
        '22815422ZbvYsB',
        '\x20𝗘𝗿𝗿𝗼𝗿\x0a\x20\x20\x20',
        'Restarting',
        '\x20\x20•\x20𝗥𝘂𝗻𝘁𝗶𝗺',
        'FLCfR',
        '𝗨𝗵𝗼𝗵!\x20𝗮𝗻\x20𝗲',
        '𝗿\x20𝗮𝘁\x20𝗱𝗲𝘃𝗲𝗹',
        '𝗶𝗯𝗹𝗲\x20𝗥𝗲𝗮𝘀𝗼',
        '54uMFucw',
        '1903WCATdr',
        'send',
        'command',
        '...',
        '𝗱\x20:\x20',
        'HvdjJ',
        '260CLmofb',
        'reset',
        'Updating..',
        'chat',
        '1908CSYHrG',
        'GhPQL',
        '1155105iROjac',
        'tags',
        '529884QyfmAQ',
        'update',
        'kerfile',
        'child_proc',
        '13hionHU',
        '\x0a\x20\x20\x0a\x20\x20𝗣𝗼𝘀𝘀',
        'HfCbN',
        '𝗲𝗱\x20\x0a\x0a𝗘𝗿𝗿𝗼𝗿',
        '𝗼𝗽𝗲𝗿𝘀\x20𝗘𝗻𝗱\x0a',
        'rowner',
        'dbwsY',
        '•\x20𝗜𝗻𝘃𝗮𝗹𝗶𝗱\x20',
        '70zdHWQA',
        'ess',
        '107970cVVugY',
        '1307ySmieK',
        '202076zlrQmj',
        'reply',
        '.us',
        'exports',
        '40hZwFWi',
        '𝗲\x20𝗘𝗿𝗿𝗼𝗿𝘀\x0a\x20',
        'Update\x20Err',
        '1034YxkSLO',
        'docker\x20bui',
        'Updated\x20!',
        'LBapI',
        '\x20Please\x20Wa'
    ];
    _0x45f6 = function () {
        return _0x556c70;
    };
    return _0x45f6();
}
function _0x498a(_0x319b2f, _0x3d4dbd) {
    const _0x19f1f5 = _0x45f6();
    return _0x498a = function (_0x50ccc7, _0x57f869) {
        _0x50ccc7 = _0x50ccc7 - (0xc2 * -0x30 + -0x2ae + 0x28c2);
        let _0x224511 = _0x19f1f5[_0x50ccc7];
        return _0x224511;
    }, _0x498a(_0x319b2f, _0x3d4dbd);
}
function _0x254dae(_0x149fc9, _0x8bec67, _0x4db3e1, _0x325361) {
    return _0x498a(_0x4db3e1 - -0xcb, _0x325361);
}
(function (_0x4827fc, _0x1a5695) {
    function _0x32037d(_0x31dc7b, _0x2423a2, _0x32f036, _0x2f6fb9) {
        return _0x498a(_0x31dc7b - -0x345, _0x2f6fb9);
    }
    const _0x5e07d7 = _0x4827fc();
    function _0x477325(_0x175afb, _0x380927, _0x390202, _0x4aa7d0) {
        return _0x498a(_0x175afb - 0x171, _0x380927);
    }
    while (!![]) {
        try {
            const _0x5eea87 = -parseInt(_0x32037d(-0x18f, -0x175, -0x190, -0x199)) / (0x173b * 0x1 + 0x829 + -0x647 * 0x5) * (-parseInt(_0x32037d(-0x187, -0x1a5, -0x18e, -0x17b)) / (-0x23c9 + 0x6df * 0x2 + -0x160d * -0x1)) + -parseInt(_0x477325(0x344, 0x345, 0x356, 0x33c)) / (-0x141 + 0x19ca * 0x1 + -0x1886) * (-parseInt(_0x477325(0x328, 0x31c, 0x31d, 0x320)) / (-0x24f7 + -0x89d + 0x2d98)) + -parseInt(_0x477325(0x34b, 0x346, 0x34e, 0x33b)) / (-0x11fb + -0xf98 + 0x158 * 0x19) * (-parseInt(_0x477325(0x326, 0x329, 0x31c, 0x334)) / (-0xe71 * -0x1 + 0x1b3f + -0x14d5 * 0x2)) + parseInt(_0x32037d(-0x165, -0x172, -0x17b, -0x160)) / (0x24 * 0x2b + 0x226b + -0x2870) * (-parseInt(_0x32037d(-0x18a, -0x1a6, -0x17c, -0x1a2)) / (0x475 + -0x1 * 0x236a + -0x1efd * -0x1)) + -parseInt(_0x477325(0x353, 0x340, 0x358, 0x345)) / (0x1 * -0x1d72 + -0x116c + 0x2ee7) * (-parseInt(_0x32037d(-0x157, -0x148, -0x162, -0x14f)) / (0x2059 + 0x20a3 + -0x40f2)) + parseInt(_0x32037d(-0x171, -0x15e, -0x179, -0x188)) / (0x2 * -0xca9 + 0x25d3 + 0x122 * -0xb) * (parseInt(_0x477325(0x34f, 0x33e, 0x335, 0x337)) / (-0x637 * -0x1 + 0xd7e + -0x13a9)) + parseInt(_0x32037d(-0x15f, -0x151, -0x15d, -0x17a)) / (0x1c32 + -0xbc2 + 0x1 * -0x1063) * (-parseInt(_0x477325(0x33c, 0x35a, 0x326, 0x344)) / (0x5ef * -0x1 + 0x7f9 + -0xfe * 0x2));
            if (_0x5eea87 === _0x1a5695)
                break;
            else
                _0x5e07d7['push'](_0x5e07d7['shift']());
        } catch (_0x5abc3b) {
            _0x5e07d7['push'](_0x5e07d7['shift']());
        }
    }
}(_0x45f6, -0x7e053 * -0x1 + 0x745d * -0x3 + 0x13420));
let handler = async (_0x28f740, {
    usedPrefix: _0x51f99d,
    command: _0x568b91,
    conn: _0xd47f26
}) => {
    const _0x1cce86 = {
        'GhPQL': _0x5baa7b(-0x1cb, -0x1ce, -0x1d3, -0x1e8) + _0x5baa7b(-0x1d0, -0x1da, -0x1e6, -0x1c8),
        'HvdjJ': _0x14001a(0x534, 0x523, 0x50a, 0x509) + _0x5baa7b(-0x1e5, -0x1d0, -0x1cb, -0x1f8) + 'it',
        'HfCbN': function (_0x410833, _0x56cc09) {
            return _0x410833(_0x56cc09);
        },
        'LBapI': _0x14001a(0x530, 0x53b, 0x520, 0x52a) + _0x14001a(0x526, 0x50a, 0x512, 0x50a),
        'dbwsY': _0x14001a(0x4fb, 0x515, 0x511, 0x518) + _0x14001a(0x528, 0x51e, 0x514, 0x50f) + _0x5baa7b(-0x1c3, -0x1dc, -0x1de, -0x1d7),
        'efAqh': function (_0xe6a479, _0x1e5c59, _0x3b90ac) {
            return _0xe6a479(_0x1e5c59, _0x3b90ac);
        },
        'FLCfR': function (_0x26f3c0, _0x1e334f) {
            return _0x26f3c0 + _0x1e334f;
        }
    };
    let {execSync: _0x47e76c} = _0x1cce86[_0x5baa7b(-0x1bf, -0x1cd, -0x1d9, -0x1b8)](require, _0x1cce86[_0x5baa7b(-0x1e6, -0x1e7, -0x1da, -0x200)]);
    function _0x14001a(_0x229571, _0x1dcd77, _0x24f31d, _0x4d03bd) {
        return _0x498a(_0x1dcd77 - 0x356, _0x4d03bd);
    }
    function _0x5baa7b(_0xd85f8f, _0x13409a, _0x1d8e33, _0x46711c) {
        return _0x498a(_0xd85f8f - -0x3a7, _0x46711c);
    }
    try {
        _0x47e76c(_0x1cce86[_0x14001a(0x550, 0x542, 0x547, 0x549)], (_0x18c140, _0xd38e54) => {
            if (_0x18c140)
                return _0xd47f26[_0x4f0319(0x50e, 0x4f6, 0x505, 0x4f1)](_0x28f740[_0x4f0319(0x51e, 0x537, 0x52a, 0x527)], eror);
            function _0x4f0319(_0x27195e, _0x3d99e0, _0x448e67, _0x1fe49d) {
                return _0x5baa7b(_0x448e67 - 0x6f4, _0x3d99e0 - 0x11a, _0x448e67 - 0x1a7, _0x1fe49d);
            }
            function _0x6a711b(_0x571b6b, _0x48113b, _0x4bca56, _0x535145) {
                return _0x5baa7b(_0x4bca56 - 0xfa, _0x48113b - 0x16d, _0x4bca56 - 0x15d, _0x48113b);
            }
            if (_0xd38e54)
                return _0xd47f26[_0x4f0319(0x4ec, 0x4ee, 0x505, 0x522)](_0x28f740[_0x6a711b(-0xed, -0xba, -0xd0, -0xc2)], _0x1cce86[_0x4f0319(0x53d, 0x51c, 0x52c, 0x535)]);
        }), _0x1cce86['efAqh'](setTimeout, () => {
            function _0x4aa51a(_0x180b9c, _0x41de1b, _0x43c85, _0x3a66e3) {
                return _0x14001a(_0x180b9c - 0x133, _0x43c85 - -0x388, _0x43c85 - 0x192, _0x41de1b);
            }
            _0xd47f26[_0x318c07(0x141, 0x12f, 0x145, 0x12d)](_0x28f740[_0x318c07(0x17e, 0x17d, 0x16a, 0x158)], _0x318c07(0x13e, 0x14f, 0x14d, 0x130));
            function _0x318c07(_0x5e3fd9, _0x3c2a5a, _0x14433a, _0x241e52) {
                return _0x5baa7b(_0x14433a - 0x334, _0x3c2a5a - 0x69, _0x14433a - 0x7b, _0x3c2a5a);
            }
            _0xd47f26['reply'](_0x28f740['chat'], _0x1cce86[_0x4aa51a(0x1a7, 0x1af, 0x1a7, 0x1b6)]), process[_0x318c07(0x14d, 0x156, 0x162, 0x14c)](_0x318c07(0x17d, 0x16b, 0x168, 0x17f));
        }, 0x89f9 + -0x8c19 + 0x7750);
    } catch (_0x13af7a) {
        _0xd47f26[_0x14001a(0x4f2, 0x50e, 0x511, 0x525)](_0x28f740[_0x5baa7b(-0x1ca, -0x1c2, -0x1b9, -0x1b7)], _0x14001a(0x51f, 0x513, 0x50a, 0x525) + 'or'), _0xd47f26['reply']('1203630222' + _0x14001a(0x510, 0x520, 0x525, 0x537) + _0x5baa7b(-0x1ee, -0x1e4, -0x202, -0x202), _0x14001a(0x51b, 0x526, 0x52d, 0x51d) + _0x5baa7b(-0x1e1, -0x1f7, -0x1c3, -0x1f6) + _0x5baa7b(-0x1be, -0x1d8, -0x1c5, -0x1b0) + _0x14001a(0x518, 0x519, 0x50c, 0x505) + util['format'](_0x13af7a) + ('\x0a\x0a\x20\x20𝗖𝗼𝗺𝗺𝗮𝗻' + _0x5baa7b(-0x1cf, -0x1e7, -0x1b4, -0x1c5)) + _0x1cce86[_0x5baa7b(-0x1d8, -0x1ef, -0x1d7, -0x1ea)](_0x51f99d, _0x568b91) + (_0x14001a(0x537, 0x53d, 0x52d, 0x54d) + _0x14001a(0x524, 0x528, 0x546, 0x541) + '𝗻𝘀\x20:\x0a\x20\x20\x20\x20\x20' + _0x5baa7b(-0x1ba, -0x1a2, -0x1a0, -0x1c0) + '𝗨𝘀𝗮𝗴𝗲\x20𝗢𝗳\x20𝗖' + _0x5baa7b(-0x1e3, -0x1e8, -0x1fd, -0x1ca) + '\x20\x20•\x20𝗦𝗲𝗿𝘃𝗲𝗿' + _0x14001a(0x51a, 0x522, 0x519, 0x533) + _0x14001a(0x53a, 0x524, 0x514, 0x51e) + _0x14001a(0x509, 0x512, 0x509, 0x514) + '\x20\x20\x20\x20•\x20𝗘𝗿𝗿𝗼' + _0x5baa7b(-0x1d6, -0x1e7, -0x1e0, -0x1de) + _0x14001a(0x52a, 0x540, 0x540, 0x55d) + '\x20\x20\x20\x20\x20•\x20𝗗𝗮𝘁' + '𝗮\x20𝗡𝗲𝘁𝘄𝗼𝗿𝗸\x20' + _0x14001a(0x52a, 0x51f, 0x51d, 0x538)), null, {});
    }
};
handler[_0x541f78(0x299, 0x2a0, 0x28e, 0x29b)] = [_0x541f78(0x2cd, 0x2bc, 0x2cc, 0x2ca)];
function _0x541f78(_0x50a060, _0x16be20, _0x5edd42, _0x18ab56) {
    return _0x498a(_0x16be20 - 0xd9, _0x5edd42);
}
handler[_0x541f78(0x2d6, 0x2ba, 0x2c7, 0x2bb)] = [_0x254dae(0xff, 0xde, 0xfa, 0xe5)], handler[_0x254dae(0x116, 0x119, 0x10b, 0x129)] = /^(update)$/i, handler[_0x254dae(0x11b, 0x137, 0x120, 0x119)] = !![], module[_0x541f78(0x286, 0x293, 0x28e, 0x299)] = handler;
